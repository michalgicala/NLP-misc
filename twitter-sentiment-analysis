{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":2510329,"sourceType":"datasetVersion","datasetId":1520310}],"dockerImageVersionId":30762,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# based on https://www.kaggle.com/datasets/jp797498e/twitter-entity-sentiment-analysis","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib as plt\nimport re\n\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk import word_tokenize\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-23T06:51:21.964788Z","iopub.execute_input":"2024-08-23T06:51:21.965151Z","iopub.status.idle":"2024-08-23T06:51:21.970787Z","shell.execute_reply.started":"2024-08-23T06:51:21.965118Z","shell.execute_reply":"2024-08-23T06:51:21.969876Z"},"trusted":true},"execution_count":362,"outputs":[]},{"cell_type":"code","source":"folder_path = \"/kaggle/input/twitter-entity-sentiment-analysis\"\nrandom_state = 1","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:21.974625Z","iopub.execute_input":"2024-08-23T06:51:21.974989Z","iopub.status.idle":"2024-08-23T06:51:21.983412Z","shell.execute_reply.started":"2024-08-23T06:51:21.974957Z","shell.execute_reply":"2024-08-23T06:51:21.982553Z"},"trusted":true},"execution_count":363,"outputs":[]},{"cell_type":"code","source":"df_train = pd.read_csv(folder_path + \"/\" + \"twitter_training.csv\", names=[\"tweet_id\",\"entity\",\"sentiment\",\"tweet_content\"])#.sample(1000, random_state=random_state, ignore_index=True)\ndf_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:21.985090Z","iopub.execute_input":"2024-08-23T06:51:21.985843Z","iopub.status.idle":"2024-08-23T06:51:22.173814Z","shell.execute_reply.started":"2024-08-23T06:51:21.985809Z","shell.execute_reply":"2024-08-23T06:51:22.172843Z"},"trusted":true},"execution_count":364,"outputs":[{"execution_count":364,"output_type":"execute_result","data":{"text/plain":"   tweet_id       entity sentiment  \\\n0      2401  Borderlands  Positive   \n1      2401  Borderlands  Positive   \n2      2401  Borderlands  Positive   \n3      2401  Borderlands  Positive   \n4      2401  Borderlands  Positive   \n\n                                       tweet_content  \n0  im getting on borderlands and i will murder yo...  \n1  I am coming to the borders and I will kill you...  \n2  im getting on borderlands and i will kill you ...  \n3  im coming on borderlands and i will murder you...  \n4  im getting on borderlands 2 and i will murder ...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tweet_id</th>\n      <th>entity</th>\n      <th>sentiment</th>\n      <th>tweet_content</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting on borderlands and i will murder yo...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>I am coming to the borders and I will kill you...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting on borderlands and i will kill you ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im coming on borderlands and i will murder you...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting on borderlands 2 and i will murder ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_test = pd.read_csv(folder_path + \"/\" + \"twitter_validation.csv\", names=[\"tweet_id\",\"entity\",\"sentiment\",\"tweet_content\"])\ndf_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.175779Z","iopub.execute_input":"2024-08-23T06:51:22.176421Z","iopub.status.idle":"2024-08-23T06:51:22.192409Z","shell.execute_reply.started":"2024-08-23T06:51:22.176365Z","shell.execute_reply":"2024-08-23T06:51:22.191474Z"},"trusted":true},"execution_count":365,"outputs":[{"execution_count":365,"output_type":"execute_result","data":{"text/plain":"   tweet_id     entity   sentiment  \\\n0      3364   Facebook  Irrelevant   \n1       352     Amazon     Neutral   \n2      8312  Microsoft    Negative   \n3      4371      CS-GO    Negative   \n4      4433     Google     Neutral   \n\n                                       tweet_content  \n0  I mentioned on Facebook that I was struggling ...  \n1  BBC News - Amazon boss Jeff Bezos rejects clai...  \n2  @Microsoft Why do I pay for WORD when it funct...  \n3  CSGO matchmaking is so full of closet hacking,...  \n4  Now the President is slapping Americans in the...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tweet_id</th>\n      <th>entity</th>\n      <th>sentiment</th>\n      <th>tweet_content</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3364</td>\n      <td>Facebook</td>\n      <td>Irrelevant</td>\n      <td>I mentioned on Facebook that I was struggling ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>352</td>\n      <td>Amazon</td>\n      <td>Neutral</td>\n      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8312</td>\n      <td>Microsoft</td>\n      <td>Negative</td>\n      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4371</td>\n      <td>CS-GO</td>\n      <td>Negative</td>\n      <td>CSGO matchmaking is so full of closet hacking,...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4433</td>\n      <td>Google</td>\n      <td>Neutral</td>\n      <td>Now the President is slapping Americans in the...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_train.shape, df_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.193524Z","iopub.execute_input":"2024-08-23T06:51:22.193816Z","iopub.status.idle":"2024-08-23T06:51:22.199704Z","shell.execute_reply.started":"2024-08-23T06:51:22.193784Z","shell.execute_reply":"2024-08-23T06:51:22.198779Z"},"trusted":true},"execution_count":366,"outputs":[{"execution_count":366,"output_type":"execute_result","data":{"text/plain":"((74682, 4), (1000, 4))"},"metadata":{}}]},{"cell_type":"code","source":"df_train.isnull().any(), df_test.isnull().any()","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.202086Z","iopub.execute_input":"2024-08-23T06:51:22.202869Z","iopub.status.idle":"2024-08-23T06:51:22.232945Z","shell.execute_reply.started":"2024-08-23T06:51:22.202824Z","shell.execute_reply":"2024-08-23T06:51:22.232055Z"},"trusted":true},"execution_count":367,"outputs":[{"execution_count":367,"output_type":"execute_result","data":{"text/plain":"(tweet_id         False\n entity           False\n sentiment        False\n tweet_content     True\n dtype: bool,\n tweet_id         False\n entity           False\n sentiment        False\n tweet_content    False\n dtype: bool)"},"metadata":{}}]},{"cell_type":"code","source":"# stop words\nnltk.download('stopwords')\nstop_words = set(stopwords.words('english'))","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.234006Z","iopub.execute_input":"2024-08-23T06:51:22.234376Z","iopub.status.idle":"2024-08-23T06:51:22.243440Z","shell.execute_reply.started":"2024-08-23T06:51:22.234309Z","shell.execute_reply":"2024-08-23T06:51:22.242574Z"},"trusted":true},"execution_count":368,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"}]},{"cell_type":"code","source":"# basic text preprocessing: stop words, punctuation, stemming, lowercasing\n\n\ndef fnTextPreprocessing(df, col):\n    \n    # convert to string\n    df[col] = df[col].apply(lambda x: str(x))\n    # lowercasing\n    df[col] = df[col].apply(lambda x: x.lower())\n    # tokenization\n    df[col] = df[col].apply(lambda x: nltk.word_tokenize(x))\n    # removing stop words\n    df[col] = df[col].apply(lambda x: [token for token in x if token not in stop_words])\n    # remvoing punctuation\n    df[col] = df[col].apply(lambda x: [re.sub(r'[^\\w\\s]', '', token) for token in x])\n    # rejoining tokens into a string\n    df[col] = df[col].apply(lambda x: ' '.join(x))\n    \n    return df[col]","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.244547Z","iopub.execute_input":"2024-08-23T06:51:22.244820Z","iopub.status.idle":"2024-08-23T06:51:22.252433Z","shell.execute_reply.started":"2024-08-23T06:51:22.244790Z","shell.execute_reply":"2024-08-23T06:51:22.251572Z"},"trusted":true},"execution_count":369,"outputs":[]},{"cell_type":"code","source":"df_train[\"tweet_content\"] = fnTextPreprocessing(df_train, \"tweet_content\")\ndf_test[\"tweet_content\"] = fnTextPreprocessing(df_test, \"tweet_content\")","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:22.253604Z","iopub.execute_input":"2024-08-23T06:51:22.253962Z","iopub.status.idle":"2024-08-23T06:51:49.300232Z","shell.execute_reply.started":"2024-08-23T06:51:22.253920Z","shell.execute_reply":"2024-08-23T06:51:49.299479Z"},"trusted":true},"execution_count":370,"outputs":[]},{"cell_type":"code","source":"df_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:49.301226Z","iopub.execute_input":"2024-08-23T06:51:49.301539Z","iopub.status.idle":"2024-08-23T06:51:49.311250Z","shell.execute_reply.started":"2024-08-23T06:51:49.301506Z","shell.execute_reply":"2024-08-23T06:51:49.310397Z"},"trusted":true},"execution_count":371,"outputs":[{"execution_count":371,"output_type":"execute_result","data":{"text/plain":"   tweet_id       entity sentiment                     tweet_content\n0      2401  Borderlands  Positive    im getting borderlands murder \n1      2401  Borderlands  Positive              coming borders kill \n2      2401  Borderlands  Positive      im getting borderlands kill \n3      2401  Borderlands  Positive     im coming borderlands murder \n4      2401  Borderlands  Positive  im getting borderlands 2 murder ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tweet_id</th>\n      <th>entity</th>\n      <th>sentiment</th>\n      <th>tweet_content</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting borderlands murder</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>coming borders kill</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting borderlands kill</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im coming borderlands murder</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2401</td>\n      <td>Borderlands</td>\n      <td>Positive</td>\n      <td>im getting borderlands 2 murder</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:49.312425Z","iopub.execute_input":"2024-08-23T06:51:49.312769Z","iopub.status.idle":"2024-08-23T06:51:49.326661Z","shell.execute_reply.started":"2024-08-23T06:51:49.312728Z","shell.execute_reply":"2024-08-23T06:51:49.325477Z"},"trusted":true},"execution_count":372,"outputs":[{"execution_count":372,"output_type":"execute_result","data":{"text/plain":"   tweet_id     entity   sentiment  \\\n0      3364   Facebook  Irrelevant   \n1       352     Amazon     Neutral   \n2      8312  Microsoft    Negative   \n3      4371      CS-GO    Negative   \n4      4433     Google     Neutral   \n\n                                       tweet_content  \n0  mentioned facebook struggling motivation go ru...  \n1  bbc news  amazon boss jeff bezos rejects claim...  \n2   microsoft pay word functions poorly  samsungu...  \n3  csgo matchmaking full closet hacking  s truly ...  \n4  president slapping americans face really commi...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tweet_id</th>\n      <th>entity</th>\n      <th>sentiment</th>\n      <th>tweet_content</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3364</td>\n      <td>Facebook</td>\n      <td>Irrelevant</td>\n      <td>mentioned facebook struggling motivation go ru...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>352</td>\n      <td>Amazon</td>\n      <td>Neutral</td>\n      <td>bbc news  amazon boss jeff bezos rejects claim...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8312</td>\n      <td>Microsoft</td>\n      <td>Negative</td>\n      <td>microsoft pay word functions poorly  samsungu...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4371</td>\n      <td>CS-GO</td>\n      <td>Negative</td>\n      <td>csgo matchmaking full closet hacking  s truly ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4433</td>\n      <td>Google</td>\n      <td>Neutral</td>\n      <td>president slapping americans face really commi...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"tokens_counter = df_train[\"tweet_content\"].apply(lambda x: len(x.split()))\ntokens_counter = tokens_counter.sum()\nprint(\"Number of tokens: \",tokens_counter)","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:49.330059Z","iopub.execute_input":"2024-08-23T06:51:49.330383Z","iopub.status.idle":"2024-08-23T06:51:49.439747Z","shell.execute_reply.started":"2024-08-23T06:51:49.330321Z","shell.execute_reply":"2024-08-23T06:51:49.438937Z"},"trusted":true},"execution_count":373,"outputs":[{"name":"stdout","text":"Number of tokens:  838615\n","output_type":"stream"}]},{"cell_type":"code","source":"# bag of words, 1-gram\nbow_counts = CountVectorizer(\n    ngram_range=(1,1)\n)","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:49.440922Z","iopub.execute_input":"2024-08-23T06:51:49.441530Z","iopub.status.idle":"2024-08-23T06:51:49.447993Z","shell.execute_reply.started":"2024-08-23T06:51:49.441486Z","shell.execute_reply":"2024-08-23T06:51:49.447071Z"},"trusted":true},"execution_count":374,"outputs":[]},{"cell_type":"code","source":"X_train_bow = bow_counts.fit_transform(df_train[\"tweet_content\"])\nX_test_bow = bow_counts.transform(df_test[\"tweet_content\"])","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:49.449124Z","iopub.execute_input":"2024-08-23T06:51:49.449484Z","iopub.status.idle":"2024-08-23T06:51:50.674138Z","shell.execute_reply.started":"2024-08-23T06:51:49.449444Z","shell.execute_reply":"2024-08-23T06:51:50.673323Z"},"trusted":true},"execution_count":375,"outputs":[]},{"cell_type":"code","source":"y_train_bow = df_train[\"sentiment\"]\ny_test_bow = df_test[\"sentiment\"]","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:50.675273Z","iopub.execute_input":"2024-08-23T06:51:50.675619Z","iopub.status.idle":"2024-08-23T06:51:50.682186Z","shell.execute_reply.started":"2024-08-23T06:51:50.675584Z","shell.execute_reply":"2024-08-23T06:51:50.681379Z"},"trusted":true},"execution_count":376,"outputs":[]},{"cell_type":"code","source":"# logistic regression\n\nmodel = LogisticRegression(solver=\"liblinear\",random_state=random_state, max_iter=200)\nmodel.fit(X_train_bow,y_train_bow)\n\ntest_pred = model.predict(X_test_bow)\n\nprint(\"Accuracy: \", accuracy_score(y_test_bow, test_pred) * 100)","metadata":{"execution":{"iopub.status.busy":"2024-08-23T06:51:50.683352Z","iopub.execute_input":"2024-08-23T06:51:50.683648Z","iopub.status.idle":"2024-08-23T06:52:04.758273Z","shell.execute_reply.started":"2024-08-23T06:51:50.683616Z","shell.execute_reply":"2024-08-23T06:52:04.757438Z"},"trusted":true},"execution_count":377,"outputs":[{"name":"stdout","text":"Accuracy:  94.69999999999999\n","output_type":"stream"}]}]}